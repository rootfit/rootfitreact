# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Test-actions

on:
  # main branch에 push될 때마다 실행
  push:
    branches: ["main"]
  # main branch에 PR이 올 때마다 실행
  pull_request:
    branches: ["main"]

  # Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # deploy 실행
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          # cache: 'npm'
      - run: "echo test success"
      # 프론트 실행
      - name: Run React
        run: |
          if [ -d "rootfit_front" ]; then
            cd rootfit_front
            npm install
            npm run build
            # npm run dev &
          echo "Successed React"
          else
          echo "Failed React"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: "./rootfit_front/dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      # 백엔드 실행
      - name: Run Node
        run: |
          if [ -d "rootfit_server" ]; then
            cd rootfit_server
            npm install
            npx nodemon app.js &
            echo "Successed Node"
          else
            echo "Failed Node"
          fi

      # 백엔드 실행
      # - name: Run Node
      #   run: (ls /rootfit_server && echo Successed Node) || (echo Failed Node)
      # 프론트 실행
      # - name: Run React
      #   run: (ls /rootfit_front && echo Successed React) || (echo Failed React)
